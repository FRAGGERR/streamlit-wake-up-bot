name: Wake Up Streamlit Apps

on:
  schedule:
    - cron: '0 */12 * * *'   # Every 12 hours
  workflow_dispatch:         # Allow manual trigger

jobs:
  wakeup:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true  # ✅ This lets git push work

      - name: 🐍 Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📆 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager requests

      - name: 🌐 Run Wake Up Bot
        run: |
          python app.py

      - name: 💾 Commit Updated CSV
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add wake_up_log.csv
          git commit -m "Update log $(TZ='Asia/Kolkata' date '+%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📬 Send Telegram Notification
        run: |
          echo "Parsing CSV for Telegram notification"
          last_line=$(tail -n 1 wake_up_log.csv)
          IFS=',' read -ra values <<< "$last_line"
          timestamp=${values[0]}
          clearsight_status=${values[1]}
          incident_status=${values[2]}

          message="📊 *Streamlit Wake-Up Report* — $timestamp\n\n"
          message+="🧠 clearsight: "
          if [[ "$clearsight_status" == "clicked" ]]; then
            message+="✅ woke up"
          elif [[ "$clearsight_status" == "already_awake_or_error" ]]; then
            message+="⚠️ already running or error"
          else
            message+="❓ unknown"
          fi
          message+="\n"

          message+="🚨 incident_management: "
          if [[ "$incident_status" == "clicked" ]]; then
            message+="✅ woke up"
          elif [[ "$incident_status" == "already_awake_or_error" ]]; then
            message+="⚠️ already running or error"
          else
            message+="❓ unknown"
          fi

          echo -e "$message"

          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="$message" \
            -d parse_mode="Markdown"

